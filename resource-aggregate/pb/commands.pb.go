// Code generated by protoc-gen-gogo. DO NOT EDIT.
// source: github.com/plgd-dev/cloud/resource-aggregate/pb/commands.proto

package pb

import (
	fmt "fmt"
	proto "github.com/gogo/protobuf/proto"
	io "io"
	math "math"
	math_bits "math/bits"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.GoGoProtoPackageIsVersion3 // please upgrade the proto package

type AuthorizationContext struct {
	DeviceId string `protobuf:"bytes,1,opt,name=device_id,json=deviceId,proto3" json:"device_id,omitempty"`
}

func (m *AuthorizationContext) Reset()         { *m = AuthorizationContext{} }
func (m *AuthorizationContext) String() string { return proto.CompactTextString(m) }
func (*AuthorizationContext) ProtoMessage()    {}
func (*AuthorizationContext) Descriptor() ([]byte, []int) {
	return fileDescriptor_10536c84a8605ab9, []int{0}
}
func (m *AuthorizationContext) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *AuthorizationContext) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_AuthorizationContext.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *AuthorizationContext) XXX_Merge(src proto.Message) {
	xxx_messageInfo_AuthorizationContext.Merge(m, src)
}
func (m *AuthorizationContext) XXX_Size() int {
	return m.Size()
}
func (m *AuthorizationContext) XXX_DiscardUnknown() {
	xxx_messageInfo_AuthorizationContext.DiscardUnknown(m)
}

var xxx_messageInfo_AuthorizationContext proto.InternalMessageInfo

func (m *AuthorizationContext) GetDeviceId() string {
	if m != nil {
		return m.DeviceId
	}
	return ""
}

type CommandMetadata struct {
	ConnectionId string `protobuf:"bytes,1,opt,name=connection_id,json=connectionId,proto3" json:"connection_id,omitempty"`
	Sequence     uint64 `protobuf:"varint,2,opt,name=sequence,proto3" json:"sequence,omitempty"`
}

func (m *CommandMetadata) Reset()         { *m = CommandMetadata{} }
func (m *CommandMetadata) String() string { return proto.CompactTextString(m) }
func (*CommandMetadata) ProtoMessage()    {}
func (*CommandMetadata) Descriptor() ([]byte, []int) {
	return fileDescriptor_10536c84a8605ab9, []int{1}
}
func (m *CommandMetadata) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *CommandMetadata) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_CommandMetadata.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *CommandMetadata) XXX_Merge(src proto.Message) {
	xxx_messageInfo_CommandMetadata.Merge(m, src)
}
func (m *CommandMetadata) XXX_Size() int {
	return m.Size()
}
func (m *CommandMetadata) XXX_DiscardUnknown() {
	xxx_messageInfo_CommandMetadata.DiscardUnknown(m)
}

var xxx_messageInfo_CommandMetadata proto.InternalMessageInfo

func (m *CommandMetadata) GetConnectionId() string {
	if m != nil {
		return m.ConnectionId
	}
	return ""
}

func (m *CommandMetadata) GetSequence() uint64 {
	if m != nil {
		return m.Sequence
	}
	return 0
}

// https://github.com/openconnectivityfoundation/core/blob/master/oic.wk.rd.raml#L65
type PublishResourceRequest struct {
	AuthorizationContext *AuthorizationContext `protobuf:"bytes,1,opt,name=authorization_context,json=authorizationContext,proto3" json:"authorization_context,omitempty"`
	ResourceId           string                `protobuf:"bytes,2,opt,name=resource_id,json=resourceId,proto3" json:"resource_id,omitempty"`
	Resource             *Resource             `protobuf:"bytes,3,opt,name=resource,proto3" json:"resource,omitempty"`
	TimeToLive           int32                 `protobuf:"varint,4,opt,name=time_to_live,json=timeToLive,proto3" json:"time_to_live,omitempty"`
	CommandMetadata      *CommandMetadata      `protobuf:"bytes,5,opt,name=command_metadata,json=commandMetadata,proto3" json:"command_metadata,omitempty"`
}

func (m *PublishResourceRequest) Reset()         { *m = PublishResourceRequest{} }
func (m *PublishResourceRequest) String() string { return proto.CompactTextString(m) }
func (*PublishResourceRequest) ProtoMessage()    {}
func (*PublishResourceRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_10536c84a8605ab9, []int{2}
}
func (m *PublishResourceRequest) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *PublishResourceRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_PublishResourceRequest.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *PublishResourceRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_PublishResourceRequest.Merge(m, src)
}
func (m *PublishResourceRequest) XXX_Size() int {
	return m.Size()
}
func (m *PublishResourceRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_PublishResourceRequest.DiscardUnknown(m)
}

var xxx_messageInfo_PublishResourceRequest proto.InternalMessageInfo

func (m *PublishResourceRequest) GetAuthorizationContext() *AuthorizationContext {
	if m != nil {
		return m.AuthorizationContext
	}
	return nil
}

func (m *PublishResourceRequest) GetResourceId() string {
	if m != nil {
		return m.ResourceId
	}
	return ""
}

func (m *PublishResourceRequest) GetResource() *Resource {
	if m != nil {
		return m.Resource
	}
	return nil
}

func (m *PublishResourceRequest) GetTimeToLive() int32 {
	if m != nil {
		return m.TimeToLive
	}
	return 0
}

func (m *PublishResourceRequest) GetCommandMetadata() *CommandMetadata {
	if m != nil {
		return m.CommandMetadata
	}
	return nil
}

type PublishResourceResponse struct {
	AuditContext *AuditContext `protobuf:"bytes,1,opt,name=audit_context,json=auditContext,proto3" json:"audit_context,omitempty"`
	InstanceId   int64         `protobuf:"varint,2,opt,name=instance_id,json=instanceId,proto3" json:"instance_id,omitempty"`
}

func (m *PublishResourceResponse) Reset()         { *m = PublishResourceResponse{} }
func (m *PublishResourceResponse) String() string { return proto.CompactTextString(m) }
func (*PublishResourceResponse) ProtoMessage()    {}
func (*PublishResourceResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_10536c84a8605ab9, []int{3}
}
func (m *PublishResourceResponse) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *PublishResourceResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_PublishResourceResponse.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *PublishResourceResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_PublishResourceResponse.Merge(m, src)
}
func (m *PublishResourceResponse) XXX_Size() int {
	return m.Size()
}
func (m *PublishResourceResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_PublishResourceResponse.DiscardUnknown(m)
}

var xxx_messageInfo_PublishResourceResponse proto.InternalMessageInfo

func (m *PublishResourceResponse) GetAuditContext() *AuditContext {
	if m != nil {
		return m.AuditContext
	}
	return nil
}

func (m *PublishResourceResponse) GetInstanceId() int64 {
	if m != nil {
		return m.InstanceId
	}
	return 0
}

// https://github.com/openconnectivityfoundation/core/blob/master/oic.wk.rd.raml #Specification CR needed
type UnpublishResourceRequest struct {
	AuthorizationContext *AuthorizationContext `protobuf:"bytes,1,opt,name=authorization_context,json=authorizationContext,proto3" json:"authorization_context,omitempty"`
	ResourceId           string                `protobuf:"bytes,2,opt,name=resource_id,json=resourceId,proto3" json:"resource_id,omitempty"`
	CommandMetadata      *CommandMetadata      `protobuf:"bytes,3,opt,name=command_metadata,json=commandMetadata,proto3" json:"command_metadata,omitempty"`
}

func (m *UnpublishResourceRequest) Reset()         { *m = UnpublishResourceRequest{} }
func (m *UnpublishResourceRequest) String() string { return proto.CompactTextString(m) }
func (*UnpublishResourceRequest) ProtoMessage()    {}
func (*UnpublishResourceRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_10536c84a8605ab9, []int{4}
}
func (m *UnpublishResourceRequest) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *UnpublishResourceRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_UnpublishResourceRequest.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *UnpublishResourceRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_UnpublishResourceRequest.Merge(m, src)
}
func (m *UnpublishResourceRequest) XXX_Size() int {
	return m.Size()
}
func (m *UnpublishResourceRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_UnpublishResourceRequest.DiscardUnknown(m)
}

var xxx_messageInfo_UnpublishResourceRequest proto.InternalMessageInfo

func (m *UnpublishResourceRequest) GetAuthorizationContext() *AuthorizationContext {
	if m != nil {
		return m.AuthorizationContext
	}
	return nil
}

func (m *UnpublishResourceRequest) GetResourceId() string {
	if m != nil {
		return m.ResourceId
	}
	return ""
}

func (m *UnpublishResourceRequest) GetCommandMetadata() *CommandMetadata {
	if m != nil {
		return m.CommandMetadata
	}
	return nil
}

type UnpublishResourceResponse struct {
	AuditContext *AuditContext `protobuf:"bytes,1,opt,name=audit_context,json=auditContext,proto3" json:"audit_context,omitempty"`
}

func (m *UnpublishResourceResponse) Reset()         { *m = UnpublishResourceResponse{} }
func (m *UnpublishResourceResponse) String() string { return proto.CompactTextString(m) }
func (*UnpublishResourceResponse) ProtoMessage()    {}
func (*UnpublishResourceResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_10536c84a8605ab9, []int{5}
}
func (m *UnpublishResourceResponse) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *UnpublishResourceResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_UnpublishResourceResponse.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *UnpublishResourceResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_UnpublishResourceResponse.Merge(m, src)
}
func (m *UnpublishResourceResponse) XXX_Size() int {
	return m.Size()
}
func (m *UnpublishResourceResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_UnpublishResourceResponse.DiscardUnknown(m)
}

var xxx_messageInfo_UnpublishResourceResponse proto.InternalMessageInfo

func (m *UnpublishResourceResponse) GetAuditContext() *AuditContext {
	if m != nil {
		return m.AuditContext
	}
	return nil
}

type NotifyResourceChangedRequest struct {
	AuthorizationContext *AuthorizationContext `protobuf:"bytes,1,opt,name=authorization_context,json=authorizationContext,proto3" json:"authorization_context,omitempty"`
	ResourceId           string                `protobuf:"bytes,2,opt,name=resource_id,json=resourceId,proto3" json:"resource_id,omitempty"`
	Content              *Content              `protobuf:"bytes,3,opt,name=content,proto3" json:"content,omitempty"`
	CommandMetadata      *CommandMetadata      `protobuf:"bytes,4,opt,name=command_metadata,json=commandMetadata,proto3" json:"command_metadata,omitempty"`
	Status               Status                `protobuf:"varint,5,opt,name=status,proto3,enum=ocf.cloud.resourceaggregate.pb.Status" json:"status,omitempty"`
}

func (m *NotifyResourceChangedRequest) Reset()         { *m = NotifyResourceChangedRequest{} }
func (m *NotifyResourceChangedRequest) String() string { return proto.CompactTextString(m) }
func (*NotifyResourceChangedRequest) ProtoMessage()    {}
func (*NotifyResourceChangedRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_10536c84a8605ab9, []int{6}
}
func (m *NotifyResourceChangedRequest) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *NotifyResourceChangedRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_NotifyResourceChangedRequest.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *NotifyResourceChangedRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_NotifyResourceChangedRequest.Merge(m, src)
}
func (m *NotifyResourceChangedRequest) XXX_Size() int {
	return m.Size()
}
func (m *NotifyResourceChangedRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_NotifyResourceChangedRequest.DiscardUnknown(m)
}

var xxx_messageInfo_NotifyResourceChangedRequest proto.InternalMessageInfo

func (m *NotifyResourceChangedRequest) GetAuthorizationContext() *AuthorizationContext {
	if m != nil {
		return m.AuthorizationContext
	}
	return nil
}

func (m *NotifyResourceChangedRequest) GetResourceId() string {
	if m != nil {
		return m.ResourceId
	}
	return ""
}

func (m *NotifyResourceChangedRequest) GetContent() *Content {
	if m != nil {
		return m.Content
	}
	return nil
}

func (m *NotifyResourceChangedRequest) GetCommandMetadata() *CommandMetadata {
	if m != nil {
		return m.CommandMetadata
	}
	return nil
}

func (m *NotifyResourceChangedRequest) GetStatus() Status {
	if m != nil {
		return m.Status
	}
	return Status_UNKNOWN
}

type NotifyResourceChangedResponse struct {
	AuditContext *AuditContext `protobuf:"bytes,1,opt,name=audit_context,json=auditContext,proto3" json:"audit_context,omitempty"`
}

func (m *NotifyResourceChangedResponse) Reset()         { *m = NotifyResourceChangedResponse{} }
func (m *NotifyResourceChangedResponse) String() string { return proto.CompactTextString(m) }
func (*NotifyResourceChangedResponse) ProtoMessage()    {}
func (*NotifyResourceChangedResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_10536c84a8605ab9, []int{7}
}
func (m *NotifyResourceChangedResponse) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *NotifyResourceChangedResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_NotifyResourceChangedResponse.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *NotifyResourceChangedResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_NotifyResourceChangedResponse.Merge(m, src)
}
func (m *NotifyResourceChangedResponse) XXX_Size() int {
	return m.Size()
}
func (m *NotifyResourceChangedResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_NotifyResourceChangedResponse.DiscardUnknown(m)
}

var xxx_messageInfo_NotifyResourceChangedResponse proto.InternalMessageInfo

func (m *NotifyResourceChangedResponse) GetAuditContext() *AuditContext {
	if m != nil {
		return m.AuditContext
	}
	return nil
}

type UpdateResourceRequest struct {
	AuthorizationContext *AuthorizationContext `protobuf:"bytes,1,opt,name=authorization_context,json=authorizationContext,proto3" json:"authorization_context,omitempty"`
	ResourceId           string                `protobuf:"bytes,2,opt,name=resource_id,json=resourceId,proto3" json:"resource_id,omitempty"`
	CorrelationId        string                `protobuf:"bytes,3,opt,name=correlation_id,json=correlationId,proto3" json:"correlation_id,omitempty"`
	Content              *Content              `protobuf:"bytes,4,opt,name=content,proto3" json:"content,omitempty"`
	ResourceInterface    string                `protobuf:"bytes,5,opt,name=resource_interface,json=resourceInterface,proto3" json:"resource_interface,omitempty"`
	CommandMetadata      *CommandMetadata      `protobuf:"bytes,100,opt,name=command_metadata,json=commandMetadata,proto3" json:"command_metadata,omitempty"`
}

func (m *UpdateResourceRequest) Reset()         { *m = UpdateResourceRequest{} }
func (m *UpdateResourceRequest) String() string { return proto.CompactTextString(m) }
func (*UpdateResourceRequest) ProtoMessage()    {}
func (*UpdateResourceRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_10536c84a8605ab9, []int{8}
}
func (m *UpdateResourceRequest) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *UpdateResourceRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_UpdateResourceRequest.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *UpdateResourceRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_UpdateResourceRequest.Merge(m, src)
}
func (m *UpdateResourceRequest) XXX_Size() int {
	return m.Size()
}
func (m *UpdateResourceRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_UpdateResourceRequest.DiscardUnknown(m)
}

var xxx_messageInfo_UpdateResourceRequest proto.InternalMessageInfo

func (m *UpdateResourceRequest) GetAuthorizationContext() *AuthorizationContext {
	if m != nil {
		return m.AuthorizationContext
	}
	return nil
}

func (m *UpdateResourceRequest) GetResourceId() string {
	if m != nil {
		return m.ResourceId
	}
	return ""
}

func (m *UpdateResourceRequest) GetCorrelationId() string {
	if m != nil {
		return m.CorrelationId
	}
	return ""
}

func (m *UpdateResourceRequest) GetContent() *Content {
	if m != nil {
		return m.Content
	}
	return nil
}

func (m *UpdateResourceRequest) GetResourceInterface() string {
	if m != nil {
		return m.ResourceInterface
	}
	return ""
}

func (m *UpdateResourceRequest) GetCommandMetadata() *CommandMetadata {
	if m != nil {
		return m.CommandMetadata
	}
	return nil
}

type UpdateResourceResponse struct {
	AuditContext *AuditContext `protobuf:"bytes,1,opt,name=audit_context,json=auditContext,proto3" json:"audit_context,omitempty"`
}

func (m *UpdateResourceResponse) Reset()         { *m = UpdateResourceResponse{} }
func (m *UpdateResourceResponse) String() string { return proto.CompactTextString(m) }
func (*UpdateResourceResponse) ProtoMessage()    {}
func (*UpdateResourceResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_10536c84a8605ab9, []int{9}
}
func (m *UpdateResourceResponse) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *UpdateResourceResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_UpdateResourceResponse.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *UpdateResourceResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_UpdateResourceResponse.Merge(m, src)
}
func (m *UpdateResourceResponse) XXX_Size() int {
	return m.Size()
}
func (m *UpdateResourceResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_UpdateResourceResponse.DiscardUnknown(m)
}

var xxx_messageInfo_UpdateResourceResponse proto.InternalMessageInfo

func (m *UpdateResourceResponse) GetAuditContext() *AuditContext {
	if m != nil {
		return m.AuditContext
	}
	return nil
}

type ConfirmResourceUpdateRequest struct {
	AuthorizationContext *AuthorizationContext `protobuf:"bytes,1,opt,name=authorization_context,json=authorizationContext,proto3" json:"authorization_context,omitempty"`
	ResourceId           string                `protobuf:"bytes,2,opt,name=resource_id,json=resourceId,proto3" json:"resource_id,omitempty"`
	CorrelationId        string                `protobuf:"bytes,3,opt,name=correlation_id,json=correlationId,proto3" json:"correlation_id,omitempty"`
	Status               Status                `protobuf:"varint,4,opt,name=status,proto3,enum=ocf.cloud.resourceaggregate.pb.Status" json:"status,omitempty"`
	Content              *Content              `protobuf:"bytes,5,opt,name=content,proto3" json:"content,omitempty"`
	CommandMetadata      *CommandMetadata      `protobuf:"bytes,6,opt,name=command_metadata,json=commandMetadata,proto3" json:"command_metadata,omitempty"`
}

func (m *ConfirmResourceUpdateRequest) Reset()         { *m = ConfirmResourceUpdateRequest{} }
func (m *ConfirmResourceUpdateRequest) String() string { return proto.CompactTextString(m) }
func (*ConfirmResourceUpdateRequest) ProtoMessage()    {}
func (*ConfirmResourceUpdateRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_10536c84a8605ab9, []int{10}
}
func (m *ConfirmResourceUpdateRequest) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *ConfirmResourceUpdateRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_ConfirmResourceUpdateRequest.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *ConfirmResourceUpdateRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ConfirmResourceUpdateRequest.Merge(m, src)
}
func (m *ConfirmResourceUpdateRequest) XXX_Size() int {
	return m.Size()
}
func (m *ConfirmResourceUpdateRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_ConfirmResourceUpdateRequest.DiscardUnknown(m)
}

var xxx_messageInfo_ConfirmResourceUpdateRequest proto.InternalMessageInfo

func (m *ConfirmResourceUpdateRequest) GetAuthorizationContext() *AuthorizationContext {
	if m != nil {
		return m.AuthorizationContext
	}
	return nil
}

func (m *ConfirmResourceUpdateRequest) GetResourceId() string {
	if m != nil {
		return m.ResourceId
	}
	return ""
}

func (m *ConfirmResourceUpdateRequest) GetCorrelationId() string {
	if m != nil {
		return m.CorrelationId
	}
	return ""
}

func (m *ConfirmResourceUpdateRequest) GetStatus() Status {
	if m != nil {
		return m.Status
	}
	return Status_UNKNOWN
}

func (m *ConfirmResourceUpdateRequest) GetContent() *Content {
	if m != nil {
		return m.Content
	}
	return nil
}

func (m *ConfirmResourceUpdateRequest) GetCommandMetadata() *CommandMetadata {
	if m != nil {
		return m.CommandMetadata
	}
	return nil
}

type ConfirmResourceUpdateResponse struct {
	AuditContext *AuditContext `protobuf:"bytes,1,opt,name=audit_context,json=auditContext,proto3" json:"audit_context,omitempty"`
}

func (m *ConfirmResourceUpdateResponse) Reset()         { *m = ConfirmResourceUpdateResponse{} }
func (m *ConfirmResourceUpdateResponse) String() string { return proto.CompactTextString(m) }
func (*ConfirmResourceUpdateResponse) ProtoMessage()    {}
func (*ConfirmResourceUpdateResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_10536c84a8605ab9, []int{11}
}
func (m *ConfirmResourceUpdateResponse) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *ConfirmResourceUpdateResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_ConfirmResourceUpdateResponse.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *ConfirmResourceUpdateResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ConfirmResourceUpdateResponse.Merge(m, src)
}
func (m *ConfirmResourceUpdateResponse) XXX_Size() int {
	return m.Size()
}
func (m *ConfirmResourceUpdateResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_ConfirmResourceUpdateResponse.DiscardUnknown(m)
}

var xxx_messageInfo_ConfirmResourceUpdateResponse proto.InternalMessageInfo

func (m *ConfirmResourceUpdateResponse) GetAuditContext() *AuditContext {
	if m != nil {
		return m.AuditContext
	}
	return nil
}

type RetrieveResourceRequest struct {
	AuthorizationContext *AuthorizationContext `protobuf:"bytes,1,opt,name=authorization_context,json=authorizationContext,proto3" json:"authorization_context,omitempty"`
	ResourceId           string                `protobuf:"bytes,2,opt,name=resource_id,json=resourceId,proto3" json:"resource_id,omitempty"`
	CorrelationId        string                `protobuf:"bytes,3,opt,name=correlation_id,json=correlationId,proto3" json:"correlation_id,omitempty"`
	ResourceInterface    string                `protobuf:"bytes,4,opt,name=resource_interface,json=resourceInterface,proto3" json:"resource_interface,omitempty"`
	CommandMetadata      *CommandMetadata      `protobuf:"bytes,5,opt,name=command_metadata,json=commandMetadata,proto3" json:"command_metadata,omitempty"`
}

func (m *RetrieveResourceRequest) Reset()         { *m = RetrieveResourceRequest{} }
func (m *RetrieveResourceRequest) String() string { return proto.CompactTextString(m) }
func (*RetrieveResourceRequest) ProtoMessage()    {}
func (*RetrieveResourceRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_10536c84a8605ab9, []int{12}
}
func (m *RetrieveResourceRequest) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *RetrieveResourceRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_RetrieveResourceRequest.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *RetrieveResourceRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_RetrieveResourceRequest.Merge(m, src)
}
func (m *RetrieveResourceRequest) XXX_Size() int {
	return m.Size()
}
func (m *RetrieveResourceRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_RetrieveResourceRequest.DiscardUnknown(m)
}

var xxx_messageInfo_RetrieveResourceRequest proto.InternalMessageInfo

func (m *RetrieveResourceRequest) GetAuthorizationContext() *AuthorizationContext {
	if m != nil {
		return m.AuthorizationContext
	}
	return nil
}

func (m *RetrieveResourceRequest) GetResourceId() string {
	if m != nil {
		return m.ResourceId
	}
	return ""
}

func (m *RetrieveResourceRequest) GetCorrelationId() string {
	if m != nil {
		return m.CorrelationId
	}
	return ""
}

func (m *RetrieveResourceRequest) GetResourceInterface() string {
	if m != nil {
		return m.ResourceInterface
	}
	return ""
}

func (m *RetrieveResourceRequest) GetCommandMetadata() *CommandMetadata {
	if m != nil {
		return m.CommandMetadata
	}
	return nil
}

type RetrieveResourceResponse struct {
	AuditContext *AuditContext `protobuf:"bytes,1,opt,name=audit_context,json=auditContext,proto3" json:"audit_context,omitempty"`
}

func (m *RetrieveResourceResponse) Reset()         { *m = RetrieveResourceResponse{} }
func (m *RetrieveResourceResponse) String() string { return proto.CompactTextString(m) }
func (*RetrieveResourceResponse) ProtoMessage()    {}
func (*RetrieveResourceResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_10536c84a8605ab9, []int{13}
}
func (m *RetrieveResourceResponse) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *RetrieveResourceResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_RetrieveResourceResponse.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *RetrieveResourceResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_RetrieveResourceResponse.Merge(m, src)
}
func (m *RetrieveResourceResponse) XXX_Size() int {
	return m.Size()
}
func (m *RetrieveResourceResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_RetrieveResourceResponse.DiscardUnknown(m)
}

var xxx_messageInfo_RetrieveResourceResponse proto.InternalMessageInfo

func (m *RetrieveResourceResponse) GetAuditContext() *AuditContext {
	if m != nil {
		return m.AuditContext
	}
	return nil
}

type ConfirmResourceRetrieveRequest struct {
	AuthorizationContext *AuthorizationContext `protobuf:"bytes,1,opt,name=authorization_context,json=authorizationContext,proto3" json:"authorization_context,omitempty"`
	ResourceId           string                `protobuf:"bytes,2,opt,name=resource_id,json=resourceId,proto3" json:"resource_id,omitempty"`
	CorrelationId        string                `protobuf:"bytes,3,opt,name=correlation_id,json=correlationId,proto3" json:"correlation_id,omitempty"`
	Status               Status                `protobuf:"varint,4,opt,name=status,proto3,enum=ocf.cloud.resourceaggregate.pb.Status" json:"status,omitempty"`
	Content              *Content              `protobuf:"bytes,5,opt,name=content,proto3" json:"content,omitempty"`
	CommandMetadata      *CommandMetadata      `protobuf:"bytes,6,opt,name=command_metadata,json=commandMetadata,proto3" json:"command_metadata,omitempty"`
}

func (m *ConfirmResourceRetrieveRequest) Reset()         { *m = ConfirmResourceRetrieveRequest{} }
func (m *ConfirmResourceRetrieveRequest) String() string { return proto.CompactTextString(m) }
func (*ConfirmResourceRetrieveRequest) ProtoMessage()    {}
func (*ConfirmResourceRetrieveRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_10536c84a8605ab9, []int{14}
}
func (m *ConfirmResourceRetrieveRequest) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *ConfirmResourceRetrieveRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_ConfirmResourceRetrieveRequest.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *ConfirmResourceRetrieveRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ConfirmResourceRetrieveRequest.Merge(m, src)
}
func (m *ConfirmResourceRetrieveRequest) XXX_Size() int {
	return m.Size()
}
func (m *ConfirmResourceRetrieveRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_ConfirmResourceRetrieveRequest.DiscardUnknown(m)
}

var xxx_messageInfo_ConfirmResourceRetrieveRequest proto.InternalMessageInfo

func (m *ConfirmResourceRetrieveRequest) GetAuthorizationContext() *AuthorizationContext {
	if m != nil {
		return m.AuthorizationContext
	}
	return nil
}

func (m *ConfirmResourceRetrieveRequest) GetResourceId() string {
	if m != nil {
		return m.ResourceId
	}
	return ""
}

func (m *ConfirmResourceRetrieveRequest) GetCorrelationId() string {
	if m != nil {
		return m.CorrelationId
	}
	return ""
}

func (m *ConfirmResourceRetrieveRequest) GetStatus() Status {
	if m != nil {
		return m.Status
	}
	return Status_UNKNOWN
}

func (m *ConfirmResourceRetrieveRequest) GetContent() *Content {
	if m != nil {
		return m.Content
	}
	return nil
}

func (m *ConfirmResourceRetrieveRequest) GetCommandMetadata() *CommandMetadata {
	if m != nil {
		return m.CommandMetadata
	}
	return nil
}

type ConfirmResourceRetrieveResponse struct {
	AuditContext *AuditContext `protobuf:"bytes,1,opt,name=audit_context,json=auditContext,proto3" json:"audit_context,omitempty"`
}

func (m *ConfirmResourceRetrieveResponse) Reset()         { *m = ConfirmResourceRetrieveResponse{} }
func (m *ConfirmResourceRetrieveResponse) String() string { return proto.CompactTextString(m) }
func (*ConfirmResourceRetrieveResponse) ProtoMessage()    {}
func (*ConfirmResourceRetrieveResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_10536c84a8605ab9, []int{15}
}
func (m *ConfirmResourceRetrieveResponse) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *ConfirmResourceRetrieveResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_ConfirmResourceRetrieveResponse.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *ConfirmResourceRetrieveResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ConfirmResourceRetrieveResponse.Merge(m, src)
}
func (m *ConfirmResourceRetrieveResponse) XXX_Size() int {
	return m.Size()
}
func (m *ConfirmResourceRetrieveResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_ConfirmResourceRetrieveResponse.DiscardUnknown(m)
}

var xxx_messageInfo_ConfirmResourceRetrieveResponse proto.InternalMessageInfo

func (m *ConfirmResourceRetrieveResponse) GetAuditContext() *AuditContext {
	if m != nil {
		return m.AuditContext
	}
	return nil
}

func init() {
	proto.RegisterType((*AuthorizationContext)(nil), "ocf.cloud.resourceaggregate.pb.AuthorizationContext")
	proto.RegisterType((*CommandMetadata)(nil), "ocf.cloud.resourceaggregate.pb.CommandMetadata")
	proto.RegisterType((*PublishResourceRequest)(nil), "ocf.cloud.resourceaggregate.pb.PublishResourceRequest")
	proto.RegisterType((*PublishResourceResponse)(nil), "ocf.cloud.resourceaggregate.pb.PublishResourceResponse")
	proto.RegisterType((*UnpublishResourceRequest)(nil), "ocf.cloud.resourceaggregate.pb.UnpublishResourceRequest")
	proto.RegisterType((*UnpublishResourceResponse)(nil), "ocf.cloud.resourceaggregate.pb.UnpublishResourceResponse")
	proto.RegisterType((*NotifyResourceChangedRequest)(nil), "ocf.cloud.resourceaggregate.pb.NotifyResourceChangedRequest")
	proto.RegisterType((*NotifyResourceChangedResponse)(nil), "ocf.cloud.resourceaggregate.pb.NotifyResourceChangedResponse")
	proto.RegisterType((*UpdateResourceRequest)(nil), "ocf.cloud.resourceaggregate.pb.UpdateResourceRequest")
	proto.RegisterType((*UpdateResourceResponse)(nil), "ocf.cloud.resourceaggregate.pb.UpdateResourceResponse")
	proto.RegisterType((*ConfirmResourceUpdateRequest)(nil), "ocf.cloud.resourceaggregate.pb.ConfirmResourceUpdateRequest")
	proto.RegisterType((*ConfirmResourceUpdateResponse)(nil), "ocf.cloud.resourceaggregate.pb.ConfirmResourceUpdateResponse")
	proto.RegisterType((*RetrieveResourceRequest)(nil), "ocf.cloud.resourceaggregate.pb.RetrieveResourceRequest")
	proto.RegisterType((*RetrieveResourceResponse)(nil), "ocf.cloud.resourceaggregate.pb.RetrieveResourceResponse")
	proto.RegisterType((*ConfirmResourceRetrieveRequest)(nil), "ocf.cloud.resourceaggregate.pb.ConfirmResourceRetrieveRequest")
	proto.RegisterType((*ConfirmResourceRetrieveResponse)(nil), "ocf.cloud.resourceaggregate.pb.ConfirmResourceRetrieveResponse")
}

func init() {
	proto.RegisterFile("github.com/plgd-dev/cloud/resource-aggregate/pb/commands.proto", fileDescriptor_10536c84a8605ab9)
}

var fileDescriptor_10536c84a8605ab9 = []byte{
	// 708 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0xec, 0x57, 0x4d, 0x6f, 0xd3, 0x40,
	0x10, 0xad, 0xe3, 0xb4, 0xb4, 0xd3, 0x2f, 0xb0, 0xfa, 0x61, 0x4a, 0xeb, 0x46, 0x46, 0x40, 0x0e,
	0xd4, 0x91, 0x5a, 0x6e, 0xa0, 0xa2, 0x12, 0x2e, 0x91, 0x0a, 0x02, 0x43, 0x2f, 0xbd, 0x44, 0x1b,
	0xef, 0x24, 0x59, 0x11, 0xef, 0x1a, 0x7b, 0x1d, 0x01, 0x47, 0x6e, 0x1c, 0x90, 0x38, 0xf2, 0x33,
	0x10, 0xbf, 0x82, 0x63, 0x6f, 0x70, 0x44, 0xed, 0x85, 0x9f, 0x81, 0xe2, 0xda, 0x49, 0x9a, 0xba,
	0x44, 0xa9, 0x12, 0x29, 0x20, 0x8e, 0x1e, 0xcf, 0xce, 0x9b, 0x79, 0xef, 0xcd, 0x26, 0x86, 0xdd,
	0x1a, 0x93, 0xf5, 0xb0, 0x62, 0x39, 0xc2, 0x2d, 0x78, 0x8d, 0x1a, 0xdd, 0xa2, 0xd8, 0x2c, 0x38,
	0x0d, 0x11, 0xd2, 0x82, 0x8f, 0x81, 0x08, 0x7d, 0x07, 0xb7, 0x48, 0xad, 0xe6, 0x63, 0x8d, 0x48,
	0x2c, 0x78, 0x95, 0x82, 0x23, 0x5c, 0x97, 0x70, 0x1a, 0x58, 0x9e, 0x2f, 0xa4, 0xd0, 0x0c, 0xe1,
	0x54, 0xad, 0x28, 0xdf, 0x4a, 0xf2, 0xdb, 0xe9, 0x96, 0x57, 0x59, 0x7b, 0x30, 0x68, 0x7d, 0x6c,
	0x22, 0x97, 0x71, 0xf5, 0xb5, 0x87, 0x83, 0x9e, 0x4e, 0xa2, 0x71, 0x01, 0x73, 0x07, 0x96, 0xf6,
	0x42, 0x59, 0x17, 0x3e, 0x7b, 0x47, 0x24, 0x13, 0xbc, 0x28, 0xb8, 0xc4, 0x37, 0x52, 0xbb, 0x01,
	0x33, 0x14, 0x9b, 0xcc, 0xc1, 0x32, 0xa3, 0xba, 0x92, 0x53, 0xf2, 0x33, 0xf6, 0xf4, 0x69, 0xa0,
	0x44, 0x4d, 0x1b, 0x16, 0x8b, 0xa7, 0x53, 0x3e, 0x41, 0x49, 0x28, 0x91, 0x44, 0xbb, 0x09, 0xf3,
	0x8e, 0xe0, 0x1c, 0x9d, 0x56, 0x91, 0xce, 0x99, 0xb9, 0x4e, 0xb0, 0x44, 0xb5, 0x35, 0x98, 0x0e,
	0xf0, 0x75, 0x88, 0xdc, 0x41, 0x3d, 0x93, 0x53, 0xf2, 0x59, 0xbb, 0xfd, 0x6c, 0xfe, 0xca, 0xc0,
	0xca, 0xb3, 0xb0, 0xd2, 0x60, 0x41, 0xdd, 0x8e, 0x7b, 0xb4, 0x5b, 0xef, 0x02, 0xa9, 0x31, 0x58,
	0x26, 0xdd, 0x3d, 0x96, 0x9d, 0xd3, 0x26, 0x23, 0x8c, 0xd9, 0xed, 0x7b, 0xd6, 0x9f, 0x29, 0xb6,
	0xd2, 0x06, 0xb4, 0x97, 0x48, 0xda, 0xd8, 0x9b, 0x30, 0x9b, 0x94, 0x68, 0x0d, 0x91, 0x89, 0x86,
	0x80, 0x24, 0x54, 0xa2, 0xda, 0x63, 0x98, 0x4e, 0x9e, 0x74, 0x35, 0x82, 0xcf, 0xf7, 0x83, 0x6f,
	0x8f, 0xd3, 0x3e, 0xa9, 0xe5, 0x60, 0x4e, 0x32, 0x17, 0xcb, 0x52, 0x94, 0x1b, 0xac, 0x89, 0x7a,
	0x36, 0xa7, 0xe4, 0x27, 0x6d, 0x68, 0xc5, 0x5e, 0x8a, 0x7d, 0xd6, 0x44, 0xed, 0x10, 0xae, 0xc6,
	0x46, 0x2a, 0xbb, 0x31, 0xc7, 0xfa, 0x64, 0x84, 0x57, 0xe8, 0x87, 0xd7, 0x23, 0x8d, 0xbd, 0xe8,
	0x9c, 0x0d, 0x98, 0x1f, 0x15, 0x58, 0x3d, 0x47, 0x75, 0xe0, 0x09, 0x1e, 0xa0, 0xf6, 0x1c, 0xe6,
	0x49, 0x48, 0x99, 0xec, 0xe1, 0xf8, 0x6e, 0x7f, 0x8e, 0x29, 0x93, 0x09, 0xb7, 0x73, 0xa4, 0xeb,
	0xa9, 0xc5, 0x29, 0xe3, 0x81, 0x24, 0xbc, 0xc3, 0xa9, 0x6a, 0x43, 0x12, 0x2a, 0x51, 0xf3, 0x7d,
	0x06, 0xf4, 0x03, 0xee, 0x8d, 0xbf, 0xf8, 0x69, 0xa2, 0xa8, 0x43, 0x12, 0x85, 0xc3, 0xf5, 0x14,
	0x0e, 0x46, 0xa6, 0x8a, 0xf9, 0x41, 0x85, 0xf5, 0xa7, 0x42, 0xb2, 0xea, 0xdb, 0x04, 0xad, 0x58,
	0x27, 0xbc, 0x86, 0x74, 0x1c, 0x89, 0xdf, 0x83, 0x2b, 0x11, 0x3a, 0x97, 0x31, 0xdf, 0x77, 0xfa,
	0xf3, 0x1d, 0xa5, 0xdb, 0xc9, 0xb9, 0x54, 0xed, 0xb2, 0xc3, 0xd1, 0x4e, 0xdb, 0x85, 0xa9, 0x40,
	0x12, 0x19, 0x06, 0xd1, 0x8a, 0x2e, 0x6c, 0xdf, 0xee, 0x57, 0xf1, 0x45, 0x94, 0x6d, 0xc7, 0xa7,
	0x4c, 0x1f, 0x36, 0x2e, 0x90, 0x62, 0x74, 0xfa, 0x7f, 0x56, 0x61, 0xf9, 0xc0, 0xa3, 0x44, 0xe2,
	0x38, 0x6f, 0xdc, 0x2d, 0x58, 0x70, 0x84, 0xef, 0x63, 0x83, 0x24, 0xbf, 0x2b, 0x6a, 0x94, 0x33,
	0xdf, 0x15, 0x3d, 0xeb, 0x8f, 0xec, 0x25, 0xfd, 0xb1, 0x05, 0x5a, 0xa7, 0x15, 0x2e, 0xd1, 0xaf,
	0x12, 0x07, 0x23, 0x3d, 0x67, 0xec, 0x6b, 0xed, 0x8e, 0x92, 0x17, 0xa9, 0x76, 0xa2, 0x43, 0xba,
	0x0a, 0x5e, 0xc1, 0x4a, 0xaf, 0x32, 0xa3, 0xf3, 0xc1, 0x17, 0x15, 0xd6, 0x8b, 0x82, 0x57, 0x99,
	0xef, 0x26, 0x70, 0x09, 0xf8, 0x5f, 0x6b, 0x87, 0xce, 0x3e, 0x66, 0x2f, 0xb3, 0x8f, 0xdd, 0x76,
	0x9a, 0x1c, 0xe2, 0x75, 0x33, 0x35, 0x24, 0x7f, 0xf8, 0xb0, 0x71, 0x81, 0x62, 0xa3, 0xb3, 0xc9,
	0xf7, 0x0c, 0xac, 0xda, 0x28, 0x7d, 0x86, 0xcd, 0x7f, 0xe1, 0xc2, 0x48, 0xdf, 0xf6, 0xec, 0x20,
	0xdb, 0x3e, 0xac, 0x7f, 0x63, 0x2e, 0xe8, 0xe7, 0x89, 0x1d, 0x9d, 0x90, 0x5f, 0x55, 0x30, 0x7a,
	0xdc, 0xd3, 0x81, 0xff, 0xbf, 0xf1, 0xe3, 0xb9, 0xf1, 0x12, 0x36, 0x2f, 0xd4, 0x6c, 0x64, 0x56,
	0x79, 0xb4, 0xff, 0xed, 0xd8, 0x50, 0x8e, 0x8e, 0x0d, 0xe5, 0xe7, 0xb1, 0xa1, 0x7c, 0x3a, 0x31,
	0x26, 0x8e, 0x4e, 0x8c, 0x89, 0x1f, 0x27, 0xc6, 0xc4, 0xe1, 0xf6, 0x80, 0x9f, 0x9d, 0xf7, 0xbd,
	0x4a, 0x65, 0x2a, 0xfa, 0xe0, 0xdc, 0xf9, 0x1d, 0x00, 0x00, 0xff, 0xff, 0xd7, 0x38, 0x75, 0x50,
	0x51, 0x0f, 0x00, 0x00,
}

func (m *AuthorizationContext) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *AuthorizationContext) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *AuthorizationContext) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if len(m.DeviceId) > 0 {
		i -= len(m.DeviceId)
		copy(dAtA[i:], m.DeviceId)
		i = encodeVarintCommands(dAtA, i, uint64(len(m.DeviceId)))
		i--
		dAtA[i] = 0xa
	}
	return len(dAtA) - i, nil
}

func (m *CommandMetadata) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *CommandMetadata) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *CommandMetadata) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.Sequence != 0 {
		i = encodeVarintCommands(dAtA, i, uint64(m.Sequence))
		i--
		dAtA[i] = 0x10
	}
	if len(m.ConnectionId) > 0 {
		i -= len(m.ConnectionId)
		copy(dAtA[i:], m.ConnectionId)
		i = encodeVarintCommands(dAtA, i, uint64(len(m.ConnectionId)))
		i--
		dAtA[i] = 0xa
	}
	return len(dAtA) - i, nil
}

func (m *PublishResourceRequest) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *PublishResourceRequest) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *PublishResourceRequest) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.CommandMetadata != nil {
		{
			size, err := m.CommandMetadata.MarshalToSizedBuffer(dAtA[:i])
			if err != nil {
				return 0, err
			}
			i -= size
			i = encodeVarintCommands(dAtA, i, uint64(size))
		}
		i--
		dAtA[i] = 0x2a
	}
	if m.TimeToLive != 0 {
		i = encodeVarintCommands(dAtA, i, uint64(m.TimeToLive))
		i--
		dAtA[i] = 0x20
	}
	if m.Resource != nil {
		{
			size, err := m.Resource.MarshalToSizedBuffer(dAtA[:i])
			if err != nil {
				return 0, err
			}
			i -= size
			i = encodeVarintCommands(dAtA, i, uint64(size))
		}
		i--
		dAtA[i] = 0x1a
	}
	if len(m.ResourceId) > 0 {
		i -= len(m.ResourceId)
		copy(dAtA[i:], m.ResourceId)
		i = encodeVarintCommands(dAtA, i, uint64(len(m.ResourceId)))
		i--
		dAtA[i] = 0x12
	}
	if m.AuthorizationContext != nil {
		{
			size, err := m.AuthorizationContext.MarshalToSizedBuffer(dAtA[:i])
			if err != nil {
				return 0, err
			}
			i -= size
			i = encodeVarintCommands(dAtA, i, uint64(size))
		}
		i--
		dAtA[i] = 0xa
	}
	return len(dAtA) - i, nil
}

func (m *PublishResourceResponse) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *PublishResourceResponse) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *PublishResourceResponse) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.InstanceId != 0 {
		i = encodeVarintCommands(dAtA, i, uint64(m.InstanceId))
		i--
		dAtA[i] = 0x10
	}
	if m.AuditContext != nil {
		{
			size, err := m.AuditContext.MarshalToSizedBuffer(dAtA[:i])
			if err != nil {
				return 0, err
			}
			i -= size
			i = encodeVarintCommands(dAtA, i, uint64(size))
		}
		i--
		dAtA[i] = 0xa
	}
	return len(dAtA) - i, nil
}

func (m *UnpublishResourceRequest) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *UnpublishResourceRequest) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *UnpublishResourceRequest) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.CommandMetadata != nil {
		{
			size, err := m.CommandMetadata.MarshalToSizedBuffer(dAtA[:i])
			if err != nil {
				return 0, err
			}
			i -= size
			i = encodeVarintCommands(dAtA, i, uint64(size))
		}
		i--
		dAtA[i] = 0x1a
	}
	if len(m.ResourceId) > 0 {
		i -= len(m.ResourceId)
		copy(dAtA[i:], m.ResourceId)
		i = encodeVarintCommands(dAtA, i, uint64(len(m.ResourceId)))
		i--
		dAtA[i] = 0x12
	}
	if m.AuthorizationContext != nil {
		{
			size, err := m.AuthorizationContext.MarshalToSizedBuffer(dAtA[:i])
			if err != nil {
				return 0, err
			}
			i -= size
			i = encodeVarintCommands(dAtA, i, uint64(size))
		}
		i--
		dAtA[i] = 0xa
	}
	return len(dAtA) - i, nil
}

func (m *UnpublishResourceResponse) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *UnpublishResourceResponse) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *UnpublishResourceResponse) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.AuditContext != nil {
		{
			size, err := m.AuditContext.MarshalToSizedBuffer(dAtA[:i])
			if err != nil {
				return 0, err
			}
			i -= size
			i = encodeVarintCommands(dAtA, i, uint64(size))
		}
		i--
		dAtA[i] = 0xa
	}
	return len(dAtA) - i, nil
}

func (m *NotifyResourceChangedRequest) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *NotifyResourceChangedRequest) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *NotifyResourceChangedRequest) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.Status != 0 {
		i = encodeVarintCommands(dAtA, i, uint64(m.Status))
		i--
		dAtA[i] = 0x28
	}
	if m.CommandMetadata != nil {
		{
			size, err := m.CommandMetadata.MarshalToSizedBuffer(dAtA[:i])
			if err != nil {
				return 0, err
			}
			i -= size
			i = encodeVarintCommands(dAtA, i, uint64(size))
		}
		i--
		dAtA[i] = 0x22
	}
	if m.Content != nil {
		{
			size, err := m.Content.MarshalToSizedBuffer(dAtA[:i])
			if err != nil {
				return 0, err
			}
			i -= size
			i = encodeVarintCommands(dAtA, i, uint64(size))
		}
		i--
		dAtA[i] = 0x1a
	}
	if len(m.ResourceId) > 0 {
		i -= len(m.ResourceId)
		copy(dAtA[i:], m.ResourceId)
		i = encodeVarintCommands(dAtA, i, uint64(len(m.ResourceId)))
		i--
		dAtA[i] = 0x12
	}
	if m.AuthorizationContext != nil {
		{
			size, err := m.AuthorizationContext.MarshalToSizedBuffer(dAtA[:i])
			if err != nil {
				return 0, err
			}
			i -= size
			i = encodeVarintCommands(dAtA, i, uint64(size))
		}
		i--
		dAtA[i] = 0xa
	}
	return len(dAtA) - i, nil
}

func (m *NotifyResourceChangedResponse) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *NotifyResourceChangedResponse) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *NotifyResourceChangedResponse) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.AuditContext != nil {
		{
			size, err := m.AuditContext.MarshalToSizedBuffer(dAtA[:i])
			if err != nil {
				return 0, err
			}
			i -= size
			i = encodeVarintCommands(dAtA, i, uint64(size))
		}
		i--
		dAtA[i] = 0xa
	}
	return len(dAtA) - i, nil
}

func (m *UpdateResourceRequest) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *UpdateResourceRequest) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *UpdateResourceRequest) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.CommandMetadata != nil {
		{
			size, err := m.CommandMetadata.MarshalToSizedBuffer(dAtA[:i])
			if err != nil {
				return 0, err
			}
			i -= size
			i = encodeVarintCommands(dAtA, i, uint64(size))
		}
		i--
		dAtA[i] = 0x6
		i--
		dAtA[i] = 0xa2
	}
	if len(m.ResourceInterface) > 0 {
		i -= len(m.ResourceInterface)
		copy(dAtA[i:], m.ResourceInterface)
		i = encodeVarintCommands(dAtA, i, uint64(len(m.ResourceInterface)))
		i--
		dAtA[i] = 0x2a
	}
	if m.Content != nil {
		{
			size, err := m.Content.MarshalToSizedBuffer(dAtA[:i])
			if err != nil {
				return 0, err
			}
			i -= size
			i = encodeVarintCommands(dAtA, i, uint64(size))
		}
		i--
		dAtA[i] = 0x22
	}
	if len(m.CorrelationId) > 0 {
		i -= len(m.CorrelationId)
		copy(dAtA[i:], m.CorrelationId)
		i = encodeVarintCommands(dAtA, i, uint64(len(m.CorrelationId)))
		i--
		dAtA[i] = 0x1a
	}
	if len(m.ResourceId) > 0 {
		i -= len(m.ResourceId)
		copy(dAtA[i:], m.ResourceId)
		i = encodeVarintCommands(dAtA, i, uint64(len(m.ResourceId)))
		i--
		dAtA[i] = 0x12
	}
	if m.AuthorizationContext != nil {
		{
			size, err := m.AuthorizationContext.MarshalToSizedBuffer(dAtA[:i])
			if err != nil {
				return 0, err
			}
			i -= size
			i = encodeVarintCommands(dAtA, i, uint64(size))
		}
		i--
		dAtA[i] = 0xa
	}
	return len(dAtA) - i, nil
}

func (m *UpdateResourceResponse) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *UpdateResourceResponse) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *UpdateResourceResponse) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.AuditContext != nil {
		{
			size, err := m.AuditContext.MarshalToSizedBuffer(dAtA[:i])
			if err != nil {
				return 0, err
			}
			i -= size
			i = encodeVarintCommands(dAtA, i, uint64(size))
		}
		i--
		dAtA[i] = 0xa
	}
	return len(dAtA) - i, nil
}

func (m *ConfirmResourceUpdateRequest) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *ConfirmResourceUpdateRequest) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *ConfirmResourceUpdateRequest) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.CommandMetadata != nil {
		{
			size, err := m.CommandMetadata.MarshalToSizedBuffer(dAtA[:i])
			if err != nil {
				return 0, err
			}
			i -= size
			i = encodeVarintCommands(dAtA, i, uint64(size))
		}
		i--
		dAtA[i] = 0x32
	}
	if m.Content != nil {
		{
			size, err := m.Content.MarshalToSizedBuffer(dAtA[:i])
			if err != nil {
				return 0, err
			}
			i -= size
			i = encodeVarintCommands(dAtA, i, uint64(size))
		}
		i--
		dAtA[i] = 0x2a
	}
	if m.Status != 0 {
		i = encodeVarintCommands(dAtA, i, uint64(m.Status))
		i--
		dAtA[i] = 0x20
	}
	if len(m.CorrelationId) > 0 {
		i -= len(m.CorrelationId)
		copy(dAtA[i:], m.CorrelationId)
		i = encodeVarintCommands(dAtA, i, uint64(len(m.CorrelationId)))
		i--
		dAtA[i] = 0x1a
	}
	if len(m.ResourceId) > 0 {
		i -= len(m.ResourceId)
		copy(dAtA[i:], m.ResourceId)
		i = encodeVarintCommands(dAtA, i, uint64(len(m.ResourceId)))
		i--
		dAtA[i] = 0x12
	}
	if m.AuthorizationContext != nil {
		{
			size, err := m.AuthorizationContext.MarshalToSizedBuffer(dAtA[:i])
			if err != nil {
				return 0, err
			}
			i -= size
			i = encodeVarintCommands(dAtA, i, uint64(size))
		}
		i--
		dAtA[i] = 0xa
	}
	return len(dAtA) - i, nil
}

func (m *ConfirmResourceUpdateResponse) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *ConfirmResourceUpdateResponse) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *ConfirmResourceUpdateResponse) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.AuditContext != nil {
		{
			size, err := m.AuditContext.MarshalToSizedBuffer(dAtA[:i])
			if err != nil {
				return 0, err
			}
			i -= size
			i = encodeVarintCommands(dAtA, i, uint64(size))
		}
		i--
		dAtA[i] = 0xa
	}
	return len(dAtA) - i, nil
}

func (m *RetrieveResourceRequest) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *RetrieveResourceRequest) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *RetrieveResourceRequest) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.CommandMetadata != nil {
		{
			size, err := m.CommandMetadata.MarshalToSizedBuffer(dAtA[:i])
			if err != nil {
				return 0, err
			}
			i -= size
			i = encodeVarintCommands(dAtA, i, uint64(size))
		}
		i--
		dAtA[i] = 0x2a
	}
	if len(m.ResourceInterface) > 0 {
		i -= len(m.ResourceInterface)
		copy(dAtA[i:], m.ResourceInterface)
		i = encodeVarintCommands(dAtA, i, uint64(len(m.ResourceInterface)))
		i--
		dAtA[i] = 0x22
	}
	if len(m.CorrelationId) > 0 {
		i -= len(m.CorrelationId)
		copy(dAtA[i:], m.CorrelationId)
		i = encodeVarintCommands(dAtA, i, uint64(len(m.CorrelationId)))
		i--
		dAtA[i] = 0x1a
	}
	if len(m.ResourceId) > 0 {
		i -= len(m.ResourceId)
		copy(dAtA[i:], m.ResourceId)
		i = encodeVarintCommands(dAtA, i, uint64(len(m.ResourceId)))
		i--
		dAtA[i] = 0x12
	}
	if m.AuthorizationContext != nil {
		{
			size, err := m.AuthorizationContext.MarshalToSizedBuffer(dAtA[:i])
			if err != nil {
				return 0, err
			}
			i -= size
			i = encodeVarintCommands(dAtA, i, uint64(size))
		}
		i--
		dAtA[i] = 0xa
	}
	return len(dAtA) - i, nil
}

func (m *RetrieveResourceResponse) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *RetrieveResourceResponse) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *RetrieveResourceResponse) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.AuditContext != nil {
		{
			size, err := m.AuditContext.MarshalToSizedBuffer(dAtA[:i])
			if err != nil {
				return 0, err
			}
			i -= size
			i = encodeVarintCommands(dAtA, i, uint64(size))
		}
		i--
		dAtA[i] = 0xa
	}
	return len(dAtA) - i, nil
}

func (m *ConfirmResourceRetrieveRequest) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *ConfirmResourceRetrieveRequest) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *ConfirmResourceRetrieveRequest) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.CommandMetadata != nil {
		{
			size, err := m.CommandMetadata.MarshalToSizedBuffer(dAtA[:i])
			if err != nil {
				return 0, err
			}
			i -= size
			i = encodeVarintCommands(dAtA, i, uint64(size))
		}
		i--
		dAtA[i] = 0x32
	}
	if m.Content != nil {
		{
			size, err := m.Content.MarshalToSizedBuffer(dAtA[:i])
			if err != nil {
				return 0, err
			}
			i -= size
			i = encodeVarintCommands(dAtA, i, uint64(size))
		}
		i--
		dAtA[i] = 0x2a
	}
	if m.Status != 0 {
		i = encodeVarintCommands(dAtA, i, uint64(m.Status))
		i--
		dAtA[i] = 0x20
	}
	if len(m.CorrelationId) > 0 {
		i -= len(m.CorrelationId)
		copy(dAtA[i:], m.CorrelationId)
		i = encodeVarintCommands(dAtA, i, uint64(len(m.CorrelationId)))
		i--
		dAtA[i] = 0x1a
	}
	if len(m.ResourceId) > 0 {
		i -= len(m.ResourceId)
		copy(dAtA[i:], m.ResourceId)
		i = encodeVarintCommands(dAtA, i, uint64(len(m.ResourceId)))
		i--
		dAtA[i] = 0x12
	}
	if m.AuthorizationContext != nil {
		{
			size, err := m.AuthorizationContext.MarshalToSizedBuffer(dAtA[:i])
			if err != nil {
				return 0, err
			}
			i -= size
			i = encodeVarintCommands(dAtA, i, uint64(size))
		}
		i--
		dAtA[i] = 0xa
	}
	return len(dAtA) - i, nil
}

func (m *ConfirmResourceRetrieveResponse) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *ConfirmResourceRetrieveResponse) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *ConfirmResourceRetrieveResponse) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.AuditContext != nil {
		{
			size, err := m.AuditContext.MarshalToSizedBuffer(dAtA[:i])
			if err != nil {
				return 0, err
			}
			i -= size
			i = encodeVarintCommands(dAtA, i, uint64(size))
		}
		i--
		dAtA[i] = 0xa
	}
	return len(dAtA) - i, nil
}

func encodeVarintCommands(dAtA []byte, offset int, v uint64) int {
	offset -= sovCommands(v)
	base := offset
	for v >= 1<<7 {
		dAtA[offset] = uint8(v&0x7f | 0x80)
		v >>= 7
		offset++
	}
	dAtA[offset] = uint8(v)
	return base
}
func (m *AuthorizationContext) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	l = len(m.DeviceId)
	if l > 0 {
		n += 1 + l + sovCommands(uint64(l))
	}
	return n
}

func (m *CommandMetadata) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	l = len(m.ConnectionId)
	if l > 0 {
		n += 1 + l + sovCommands(uint64(l))
	}
	if m.Sequence != 0 {
		n += 1 + sovCommands(uint64(m.Sequence))
	}
	return n
}

func (m *PublishResourceRequest) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if m.AuthorizationContext != nil {
		l = m.AuthorizationContext.Size()
		n += 1 + l + sovCommands(uint64(l))
	}
	l = len(m.ResourceId)
	if l > 0 {
		n += 1 + l + sovCommands(uint64(l))
	}
	if m.Resource != nil {
		l = m.Resource.Size()
		n += 1 + l + sovCommands(uint64(l))
	}
	if m.TimeToLive != 0 {
		n += 1 + sovCommands(uint64(m.TimeToLive))
	}
	if m.CommandMetadata != nil {
		l = m.CommandMetadata.Size()
		n += 1 + l + sovCommands(uint64(l))
	}
	return n
}

func (m *PublishResourceResponse) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if m.AuditContext != nil {
		l = m.AuditContext.Size()
		n += 1 + l + sovCommands(uint64(l))
	}
	if m.InstanceId != 0 {
		n += 1 + sovCommands(uint64(m.InstanceId))
	}
	return n
}

func (m *UnpublishResourceRequest) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if m.AuthorizationContext != nil {
		l = m.AuthorizationContext.Size()
		n += 1 + l + sovCommands(uint64(l))
	}
	l = len(m.ResourceId)
	if l > 0 {
		n += 1 + l + sovCommands(uint64(l))
	}
	if m.CommandMetadata != nil {
		l = m.CommandMetadata.Size()
		n += 1 + l + sovCommands(uint64(l))
	}
	return n
}

func (m *UnpublishResourceResponse) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if m.AuditContext != nil {
		l = m.AuditContext.Size()
		n += 1 + l + sovCommands(uint64(l))
	}
	return n
}

func (m *NotifyResourceChangedRequest) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if m.AuthorizationContext != nil {
		l = m.AuthorizationContext.Size()
		n += 1 + l + sovCommands(uint64(l))
	}
	l = len(m.ResourceId)
	if l > 0 {
		n += 1 + l + sovCommands(uint64(l))
	}
	if m.Content != nil {
		l = m.Content.Size()
		n += 1 + l + sovCommands(uint64(l))
	}
	if m.CommandMetadata != nil {
		l = m.CommandMetadata.Size()
		n += 1 + l + sovCommands(uint64(l))
	}
	if m.Status != 0 {
		n += 1 + sovCommands(uint64(m.Status))
	}
	return n
}

func (m *NotifyResourceChangedResponse) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if m.AuditContext != nil {
		l = m.AuditContext.Size()
		n += 1 + l + sovCommands(uint64(l))
	}
	return n
}

func (m *UpdateResourceRequest) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if m.AuthorizationContext != nil {
		l = m.AuthorizationContext.Size()
		n += 1 + l + sovCommands(uint64(l))
	}
	l = len(m.ResourceId)
	if l > 0 {
		n += 1 + l + sovCommands(uint64(l))
	}
	l = len(m.CorrelationId)
	if l > 0 {
		n += 1 + l + sovCommands(uint64(l))
	}
	if m.Content != nil {
		l = m.Content.Size()
		n += 1 + l + sovCommands(uint64(l))
	}
	l = len(m.ResourceInterface)
	if l > 0 {
		n += 1 + l + sovCommands(uint64(l))
	}
	if m.CommandMetadata != nil {
		l = m.CommandMetadata.Size()
		n += 2 + l + sovCommands(uint64(l))
	}
	return n
}

func (m *UpdateResourceResponse) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if m.AuditContext != nil {
		l = m.AuditContext.Size()
		n += 1 + l + sovCommands(uint64(l))
	}
	return n
}

func (m *ConfirmResourceUpdateRequest) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if m.AuthorizationContext != nil {
		l = m.AuthorizationContext.Size()
		n += 1 + l + sovCommands(uint64(l))
	}
	l = len(m.ResourceId)
	if l > 0 {
		n += 1 + l + sovCommands(uint64(l))
	}
	l = len(m.CorrelationId)
	if l > 0 {
		n += 1 + l + sovCommands(uint64(l))
	}
	if m.Status != 0 {
		n += 1 + sovCommands(uint64(m.Status))
	}
	if m.Content != nil {
		l = m.Content.Size()
		n += 1 + l + sovCommands(uint64(l))
	}
	if m.CommandMetadata != nil {
		l = m.CommandMetadata.Size()
		n += 1 + l + sovCommands(uint64(l))
	}
	return n
}

func (m *ConfirmResourceUpdateResponse) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if m.AuditContext != nil {
		l = m.AuditContext.Size()
		n += 1 + l + sovCommands(uint64(l))
	}
	return n
}

func (m *RetrieveResourceRequest) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if m.AuthorizationContext != nil {
		l = m.AuthorizationContext.Size()
		n += 1 + l + sovCommands(uint64(l))
	}
	l = len(m.ResourceId)
	if l > 0 {
		n += 1 + l + sovCommands(uint64(l))
	}
	l = len(m.CorrelationId)
	if l > 0 {
		n += 1 + l + sovCommands(uint64(l))
	}
	l = len(m.ResourceInterface)
	if l > 0 {
		n += 1 + l + sovCommands(uint64(l))
	}
	if m.CommandMetadata != nil {
		l = m.CommandMetadata.Size()
		n += 1 + l + sovCommands(uint64(l))
	}
	return n
}

func (m *RetrieveResourceResponse) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if m.AuditContext != nil {
		l = m.AuditContext.Size()
		n += 1 + l + sovCommands(uint64(l))
	}
	return n
}

func (m *ConfirmResourceRetrieveRequest) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if m.AuthorizationContext != nil {
		l = m.AuthorizationContext.Size()
		n += 1 + l + sovCommands(uint64(l))
	}
	l = len(m.ResourceId)
	if l > 0 {
		n += 1 + l + sovCommands(uint64(l))
	}
	l = len(m.CorrelationId)
	if l > 0 {
		n += 1 + l + sovCommands(uint64(l))
	}
	if m.Status != 0 {
		n += 1 + sovCommands(uint64(m.Status))
	}
	if m.Content != nil {
		l = m.Content.Size()
		n += 1 + l + sovCommands(uint64(l))
	}
	if m.CommandMetadata != nil {
		l = m.CommandMetadata.Size()
		n += 1 + l + sovCommands(uint64(l))
	}
	return n
}

func (m *ConfirmResourceRetrieveResponse) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if m.AuditContext != nil {
		l = m.AuditContext.Size()
		n += 1 + l + sovCommands(uint64(l))
	}
	return n
}

func sovCommands(x uint64) (n int) {
	return (math_bits.Len64(x|1) + 6) / 7
}
func sozCommands(x uint64) (n int) {
	return sovCommands(uint64((x << 1) ^ uint64((int64(x) >> 63))))
}
func (m *AuthorizationContext) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowCommands
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: AuthorizationContext: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: AuthorizationContext: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field DeviceId", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowCommands
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthCommands
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthCommands
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.DeviceId = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipCommands(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if skippy < 0 {
				return ErrInvalidLengthCommands
			}
			if (iNdEx + skippy) < 0 {
				return ErrInvalidLengthCommands
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *CommandMetadata) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowCommands
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: CommandMetadata: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: CommandMetadata: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field ConnectionId", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowCommands
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthCommands
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthCommands
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.ConnectionId = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 2:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field Sequence", wireType)
			}
			m.Sequence = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowCommands
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.Sequence |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		default:
			iNdEx = preIndex
			skippy, err := skipCommands(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if skippy < 0 {
				return ErrInvalidLengthCommands
			}
			if (iNdEx + skippy) < 0 {
				return ErrInvalidLengthCommands
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *PublishResourceRequest) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowCommands
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: PublishResourceRequest: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: PublishResourceRequest: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field AuthorizationContext", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowCommands
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthCommands
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthCommands
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			if m.AuthorizationContext == nil {
				m.AuthorizationContext = &AuthorizationContext{}
			}
			if err := m.AuthorizationContext.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		case 2:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field ResourceId", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowCommands
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthCommands
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthCommands
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.ResourceId = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 3:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Resource", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowCommands
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthCommands
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthCommands
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			if m.Resource == nil {
				m.Resource = &Resource{}
			}
			if err := m.Resource.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		case 4:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field TimeToLive", wireType)
			}
			m.TimeToLive = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowCommands
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.TimeToLive |= int32(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 5:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field CommandMetadata", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowCommands
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthCommands
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthCommands
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			if m.CommandMetadata == nil {
				m.CommandMetadata = &CommandMetadata{}
			}
			if err := m.CommandMetadata.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipCommands(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if skippy < 0 {
				return ErrInvalidLengthCommands
			}
			if (iNdEx + skippy) < 0 {
				return ErrInvalidLengthCommands
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *PublishResourceResponse) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowCommands
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: PublishResourceResponse: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: PublishResourceResponse: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field AuditContext", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowCommands
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthCommands
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthCommands
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			if m.AuditContext == nil {
				m.AuditContext = &AuditContext{}
			}
			if err := m.AuditContext.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		case 2:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field InstanceId", wireType)
			}
			m.InstanceId = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowCommands
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.InstanceId |= int64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		default:
			iNdEx = preIndex
			skippy, err := skipCommands(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if skippy < 0 {
				return ErrInvalidLengthCommands
			}
			if (iNdEx + skippy) < 0 {
				return ErrInvalidLengthCommands
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *UnpublishResourceRequest) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowCommands
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: UnpublishResourceRequest: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: UnpublishResourceRequest: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field AuthorizationContext", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowCommands
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthCommands
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthCommands
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			if m.AuthorizationContext == nil {
				m.AuthorizationContext = &AuthorizationContext{}
			}
			if err := m.AuthorizationContext.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		case 2:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field ResourceId", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowCommands
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthCommands
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthCommands
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.ResourceId = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 3:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field CommandMetadata", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowCommands
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthCommands
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthCommands
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			if m.CommandMetadata == nil {
				m.CommandMetadata = &CommandMetadata{}
			}
			if err := m.CommandMetadata.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipCommands(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if skippy < 0 {
				return ErrInvalidLengthCommands
			}
			if (iNdEx + skippy) < 0 {
				return ErrInvalidLengthCommands
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *UnpublishResourceResponse) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowCommands
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: UnpublishResourceResponse: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: UnpublishResourceResponse: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field AuditContext", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowCommands
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthCommands
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthCommands
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			if m.AuditContext == nil {
				m.AuditContext = &AuditContext{}
			}
			if err := m.AuditContext.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipCommands(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if skippy < 0 {
				return ErrInvalidLengthCommands
			}
			if (iNdEx + skippy) < 0 {
				return ErrInvalidLengthCommands
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *NotifyResourceChangedRequest) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowCommands
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: NotifyResourceChangedRequest: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: NotifyResourceChangedRequest: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field AuthorizationContext", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowCommands
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthCommands
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthCommands
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			if m.AuthorizationContext == nil {
				m.AuthorizationContext = &AuthorizationContext{}
			}
			if err := m.AuthorizationContext.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		case 2:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field ResourceId", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowCommands
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthCommands
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthCommands
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.ResourceId = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 3:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Content", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowCommands
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthCommands
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthCommands
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			if m.Content == nil {
				m.Content = &Content{}
			}
			if err := m.Content.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		case 4:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field CommandMetadata", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowCommands
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthCommands
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthCommands
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			if m.CommandMetadata == nil {
				m.CommandMetadata = &CommandMetadata{}
			}
			if err := m.CommandMetadata.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		case 5:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field Status", wireType)
			}
			m.Status = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowCommands
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.Status |= Status(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		default:
			iNdEx = preIndex
			skippy, err := skipCommands(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if skippy < 0 {
				return ErrInvalidLengthCommands
			}
			if (iNdEx + skippy) < 0 {
				return ErrInvalidLengthCommands
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *NotifyResourceChangedResponse) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowCommands
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: NotifyResourceChangedResponse: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: NotifyResourceChangedResponse: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field AuditContext", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowCommands
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthCommands
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthCommands
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			if m.AuditContext == nil {
				m.AuditContext = &AuditContext{}
			}
			if err := m.AuditContext.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipCommands(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if skippy < 0 {
				return ErrInvalidLengthCommands
			}
			if (iNdEx + skippy) < 0 {
				return ErrInvalidLengthCommands
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *UpdateResourceRequest) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowCommands
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: UpdateResourceRequest: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: UpdateResourceRequest: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field AuthorizationContext", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowCommands
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthCommands
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthCommands
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			if m.AuthorizationContext == nil {
				m.AuthorizationContext = &AuthorizationContext{}
			}
			if err := m.AuthorizationContext.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		case 2:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field ResourceId", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowCommands
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthCommands
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthCommands
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.ResourceId = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 3:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field CorrelationId", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowCommands
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthCommands
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthCommands
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.CorrelationId = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 4:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Content", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowCommands
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthCommands
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthCommands
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			if m.Content == nil {
				m.Content = &Content{}
			}
			if err := m.Content.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		case 5:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field ResourceInterface", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowCommands
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthCommands
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthCommands
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.ResourceInterface = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 100:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field CommandMetadata", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowCommands
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthCommands
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthCommands
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			if m.CommandMetadata == nil {
				m.CommandMetadata = &CommandMetadata{}
			}
			if err := m.CommandMetadata.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipCommands(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if skippy < 0 {
				return ErrInvalidLengthCommands
			}
			if (iNdEx + skippy) < 0 {
				return ErrInvalidLengthCommands
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *UpdateResourceResponse) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowCommands
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: UpdateResourceResponse: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: UpdateResourceResponse: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field AuditContext", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowCommands
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthCommands
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthCommands
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			if m.AuditContext == nil {
				m.AuditContext = &AuditContext{}
			}
			if err := m.AuditContext.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipCommands(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if skippy < 0 {
				return ErrInvalidLengthCommands
			}
			if (iNdEx + skippy) < 0 {
				return ErrInvalidLengthCommands
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *ConfirmResourceUpdateRequest) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowCommands
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: ConfirmResourceUpdateRequest: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: ConfirmResourceUpdateRequest: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field AuthorizationContext", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowCommands
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthCommands
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthCommands
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			if m.AuthorizationContext == nil {
				m.AuthorizationContext = &AuthorizationContext{}
			}
			if err := m.AuthorizationContext.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		case 2:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field ResourceId", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowCommands
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthCommands
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthCommands
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.ResourceId = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 3:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field CorrelationId", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowCommands
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthCommands
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthCommands
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.CorrelationId = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 4:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field Status", wireType)
			}
			m.Status = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowCommands
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.Status |= Status(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 5:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Content", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowCommands
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthCommands
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthCommands
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			if m.Content == nil {
				m.Content = &Content{}
			}
			if err := m.Content.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		case 6:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field CommandMetadata", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowCommands
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthCommands
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthCommands
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			if m.CommandMetadata == nil {
				m.CommandMetadata = &CommandMetadata{}
			}
			if err := m.CommandMetadata.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipCommands(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if skippy < 0 {
				return ErrInvalidLengthCommands
			}
			if (iNdEx + skippy) < 0 {
				return ErrInvalidLengthCommands
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *ConfirmResourceUpdateResponse) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowCommands
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: ConfirmResourceUpdateResponse: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: ConfirmResourceUpdateResponse: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field AuditContext", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowCommands
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthCommands
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthCommands
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			if m.AuditContext == nil {
				m.AuditContext = &AuditContext{}
			}
			if err := m.AuditContext.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipCommands(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if skippy < 0 {
				return ErrInvalidLengthCommands
			}
			if (iNdEx + skippy) < 0 {
				return ErrInvalidLengthCommands
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *RetrieveResourceRequest) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowCommands
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: RetrieveResourceRequest: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: RetrieveResourceRequest: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field AuthorizationContext", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowCommands
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthCommands
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthCommands
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			if m.AuthorizationContext == nil {
				m.AuthorizationContext = &AuthorizationContext{}
			}
			if err := m.AuthorizationContext.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		case 2:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field ResourceId", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowCommands
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthCommands
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthCommands
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.ResourceId = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 3:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field CorrelationId", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowCommands
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthCommands
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthCommands
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.CorrelationId = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 4:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field ResourceInterface", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowCommands
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthCommands
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthCommands
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.ResourceInterface = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 5:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field CommandMetadata", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowCommands
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthCommands
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthCommands
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			if m.CommandMetadata == nil {
				m.CommandMetadata = &CommandMetadata{}
			}
			if err := m.CommandMetadata.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipCommands(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if skippy < 0 {
				return ErrInvalidLengthCommands
			}
			if (iNdEx + skippy) < 0 {
				return ErrInvalidLengthCommands
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *RetrieveResourceResponse) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowCommands
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: RetrieveResourceResponse: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: RetrieveResourceResponse: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field AuditContext", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowCommands
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthCommands
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthCommands
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			if m.AuditContext == nil {
				m.AuditContext = &AuditContext{}
			}
			if err := m.AuditContext.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipCommands(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if skippy < 0 {
				return ErrInvalidLengthCommands
			}
			if (iNdEx + skippy) < 0 {
				return ErrInvalidLengthCommands
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *ConfirmResourceRetrieveRequest) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowCommands
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: ConfirmResourceRetrieveRequest: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: ConfirmResourceRetrieveRequest: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field AuthorizationContext", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowCommands
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthCommands
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthCommands
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			if m.AuthorizationContext == nil {
				m.AuthorizationContext = &AuthorizationContext{}
			}
			if err := m.AuthorizationContext.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		case 2:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field ResourceId", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowCommands
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthCommands
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthCommands
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.ResourceId = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 3:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field CorrelationId", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowCommands
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthCommands
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthCommands
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.CorrelationId = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 4:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field Status", wireType)
			}
			m.Status = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowCommands
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.Status |= Status(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 5:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Content", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowCommands
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthCommands
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthCommands
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			if m.Content == nil {
				m.Content = &Content{}
			}
			if err := m.Content.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		case 6:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field CommandMetadata", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowCommands
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthCommands
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthCommands
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			if m.CommandMetadata == nil {
				m.CommandMetadata = &CommandMetadata{}
			}
			if err := m.CommandMetadata.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipCommands(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if skippy < 0 {
				return ErrInvalidLengthCommands
			}
			if (iNdEx + skippy) < 0 {
				return ErrInvalidLengthCommands
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *ConfirmResourceRetrieveResponse) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowCommands
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: ConfirmResourceRetrieveResponse: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: ConfirmResourceRetrieveResponse: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field AuditContext", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowCommands
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthCommands
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthCommands
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			if m.AuditContext == nil {
				m.AuditContext = &AuditContext{}
			}
			if err := m.AuditContext.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipCommands(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if skippy < 0 {
				return ErrInvalidLengthCommands
			}
			if (iNdEx + skippy) < 0 {
				return ErrInvalidLengthCommands
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func skipCommands(dAtA []byte) (n int, err error) {
	l := len(dAtA)
	iNdEx := 0
	depth := 0
	for iNdEx < l {
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return 0, ErrIntOverflowCommands
			}
			if iNdEx >= l {
				return 0, io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= (uint64(b) & 0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		wireType := int(wire & 0x7)
		switch wireType {
		case 0:
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return 0, ErrIntOverflowCommands
				}
				if iNdEx >= l {
					return 0, io.ErrUnexpectedEOF
				}
				iNdEx++
				if dAtA[iNdEx-1] < 0x80 {
					break
				}
			}
		case 1:
			iNdEx += 8
		case 2:
			var length int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return 0, ErrIntOverflowCommands
				}
				if iNdEx >= l {
					return 0, io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				length |= (int(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if length < 0 {
				return 0, ErrInvalidLengthCommands
			}
			iNdEx += length
		case 3:
			depth++
		case 4:
			if depth == 0 {
				return 0, ErrUnexpectedEndOfGroupCommands
			}
			depth--
		case 5:
			iNdEx += 4
		default:
			return 0, fmt.Errorf("proto: illegal wireType %d", wireType)
		}
		if iNdEx < 0 {
			return 0, ErrInvalidLengthCommands
		}
		if depth == 0 {
			return iNdEx, nil
		}
	}
	return 0, io.ErrUnexpectedEOF
}

var (
	ErrInvalidLengthCommands        = fmt.Errorf("proto: negative length found during unmarshaling")
	ErrIntOverflowCommands          = fmt.Errorf("proto: integer overflow")
	ErrUnexpectedEndOfGroupCommands = fmt.Errorf("proto: unexpected end of group")
)
