FROM cloud-test AS build
ARG root_directory=$GOPATH/src/github.com/plgd-dev/cloud

#coap-gateway
ARG service=coap-gateway
WORKDIR $root_directory/$service
RUN go build -ldflags "-linkmode external -extldflags -static" -o /go/bin/$service ./cmd/service

#grpc-gateway
ARG service=grpc-gateway
WORKDIR $root_directory/$service
RUN go build -ldflags "-linkmode external -extldflags -static" -o /go/bin/$service ./cmd/service

#http-gateway
ARG service=http-gateway
WORKDIR $root_directory/$service
RUN go build -ldflags "-linkmode external -extldflags -static" -o /go/bin/$service ./cmd/service

#resource-directory
ARG service=resource-directory
WORKDIR $root_directory/$service
RUN go build -ldflags "-linkmode external -extldflags -static" -o /go/bin/$service ./cmd/service

#resource-aggregate
ARG service=resource-aggregate
WORKDIR $root_directory/$service
RUN go build -ldflags "-linkmode external -extldflags -static" -o /go/bin/$service ./cmd/service

#authorization
ARG service=authorization
WORKDIR $root_directory/$service
RUN go build -ldflags "-linkmode external -extldflags -static" -o /go/bin/$service ./cmd/service

#certificate-authority
ARG service=certificate-authority
WORKDIR $root_directory/$service
RUN go build -ldflags "-linkmode external -extldflags -static" -o /go/bin/$service ./cmd/service

#oauth-server
ARG service=oauth-server
WORKDIR $root_directory/test/$service
RUN go build -ldflags "-linkmode external -extldflags -static" -o /go/bin/$service ./cmd/service

#cloud2cloud-connector
ARG service=cloud2cloud-connector
WORKDIR $root_directory/$service
RUN go build -ldflags "-linkmode external -extldflags -static" -o /go/bin/$service ./cmd/service

#cloud2cloud-gateway
ARG service=cloud2cloud-gateway
WORKDIR $root_directory/$service
RUN go build -ldflags "-linkmode external -extldflags -static" -o /go/bin/$service ./cmd/service

#certificate-generator
ARG service=kit
WORKDIR /
RUN cd $GOPATH/pkg/mod/github.com/plgd-dev/kit* && go build -ldflags "-linkmode external -extldflags -static" -o /go/bin/certificate-generator ./cmd/certificate-generator

#nats
WORKDIR $root_directory
RUN curl -L https://github.com/nats-io/nats-server/releases/download/v2.1.9/nats-server-v2.1.9-linux-amd64.zip -o ./nats-server.zip
RUN mkdir -p ./nats-server
RUN unzip ./nats-server.zip -d ./nats-server
RUN cp ./nats-server/*/nats-server /go/bin/nats-server

FROM node:12 AS build-web
COPY --from=cloud-test /go/src/github.com/plgd-dev/cloud/http-gateway/web /web
RUN cd /web && npm install && npm run build

FROM ubuntu:20.04 as service
RUN apt update
RUN apt install -y wget gnupg iproute2 systemctl openssl net-tools
RUN wget -qO - https://www.mongodb.org/static/pgp/server-4.4.asc | apt-key add -
RUN echo "deb [ arch=amd64,arm64 ] https://repo.mongodb.org/apt/ubuntu focal/mongodb-org/4.4 multiverse" | tee /etc/apt/sources.list.d/mongodb-org-4.4.list
RUN apt update
RUN apt-get install -y mongodb-org-server mongodb-org
COPY --from=build /go/bin/coap-gateway /usr/local/bin/coap-gateway
COPY --from=build /go/bin/grpc-gateway /usr/local/bin/grpc-gateway
COPY --from=build /go/bin/http-gateway /usr/local/bin/http-gateway
COPY --from=build /go/bin/resource-directory /usr/local/bin/resource-directory
COPY --from=build /go/bin/resource-aggregate /usr/local/bin/resource-aggregate
COPY --from=build /go/bin/authorization /usr/local/bin/authorization
COPY --from=build /go/bin/certificate-authority /usr/local/bin/certificate-authority
COPY --from=build /go/bin/cloud2cloud-connector /usr/local/bin/cloud2cloud-connector
COPY --from=build /go/bin/cloud2cloud-gateway /usr/local/bin/cloud2cloud-gateway
COPY --from=build /go/bin/certificate-generator /usr/local/bin/certificate-generator
COPY --from=build /go/bin/nats-server /usr/local/bin/nats-server
COPY --from=build /go/bin/oauth-server /usr/local/bin/oauth-server
COPY --from=build-web /web/build /usr/local/var/www
COPY run.configtest.sh /usr/local/bin/run.configtest.sh

RUN mkdir -p /data/yaml
COPY coap-gateway.yaml /data/yaml/coap-gateway.yaml
COPY coap-gateway-unsecure.yaml /data/yaml/coap-gateway-unsecure.yaml
COPY grpc-gateway.yaml /data/yaml/grpc-gateway.yaml
COPY http-gateway.yaml /data/yaml/http-gateway.yaml
COPY resource-directory.yaml /data/yaml/resource-directory.yaml
COPY resource-aggregate.yaml /data/yaml/resource-aggregate.yaml
COPY authorization.yaml /data/yaml/authorization.yaml
COPY certificate-authority.yaml /data/yaml/certificate-authority.yaml
COPY c2c-connector.yaml /data/yaml/c2c-connector.yaml
COPY c2c-gateway.yaml /data/yaml/c2c-gateway.yaml
COPY oauth-server.yaml /data/yaml/oauth-server.yaml

# global
ENV FQDN="localhost"

# coap-gateway
ENV COAP_GATEWAY_FQDN=$FQDN
ENV COAP_GATEWAY_CLOUD_ID="00000000-0000-0000-0000-000000000001"

# certs init
ENV INITIALIZE_CERITIFICATES=true

# ports
ENV CERTIFICATE_AUTHORITY_PORT=9087
ENV MOCKED_OAUTH_SERVER_PORT=9090
ENV RESOURCE_AGGREGATE_PORT=9083
ENV RESOURCE_DIRECTORY_PORT=9082
ENV AUTHORIZATION_PORT=9081
ENV AUTHORIZATION_HTTP_PORT=9085
ENV GRPC_GATEWAY_PORT=9084
ENV HTTP_GATEWAY_PORT=9086
ENV MONGO_PORT=27017
ENV NATS_PORT=4222

ENTRYPOINT ["/usr/local/bin/run.configtest.sh"]